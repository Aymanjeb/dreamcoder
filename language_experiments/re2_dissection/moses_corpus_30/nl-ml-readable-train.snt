###re2_train_0_if_the_word_ends_with_any_letter_add_w_after_that
if the word ends with any letter add w after that
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _w
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _w
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _w #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _w #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _w
###re2_train_3_if_there_is_d_replace_that_with_y
if there is d replace that with y
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) if _rmatch _d _y
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _d _y
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _rempty if _rmatch _d _y
###re2_train_4_if_there_is_b_add_k_before_that
if there is b add k before that
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _b _k _b
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _b _k _b
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _b _k _b
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _b _rconcat _k _b
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _b _k _b
###re2_train_6_if_the_word_starts_with_any_letter_any_letter_add_f_after_that
if the word starts with any letter any letter add f after that
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons car #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _f car _rrevcdr cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons car _rrevcdr #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _f car cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons car _rrevcdr #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _f car _rrevcdr cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons car _rrevcdr _rrevcdr #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _f car _rrevcdr cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _o cons car _rrevcdr #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _f car _rrevcdr cdr
###re2_train_11_if_the_word_starts_with_any_letter_replace_that_with_r_u
if the word starts with any letter replace that with r u
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _u _r
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _u _r
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _u _r #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _u _r #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _u _r
###re2_train_14_if_there_is_t_replace_that_with_a_x
if there is t replace that with a x
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _t _a _x
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _ror _t _rempty _a _x
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _ror _t _j _a _x
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _ror _t _t _a _x
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) car map _t _rappend _i _rrevcdr _rsplit _rdot _a _x
###re2_train_17_if_the_word_starts_with_any_letter_any_letter_replace_that_with_l_n
if the word starts with any letter any letter replace that with l n
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _n _l
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _n _l
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _n _l #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _n _l #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _n _l #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
###re2_train_19_if_the_word_ends_with_any_letter_consonant_replace_that_with_v
if the word ends with any letter consonant replace that with v
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch _rtail _e _rappend _v _rrevcdr _rrevcdr
###re2_train_20_if_there_is_e_add_e_before_that
if there is e add e before that
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _e _e _e
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _e _e _e
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _e _e _e
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _e _rconcat _e _e
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _e _e _e
###re2_train_21_if_the_word_starts_with_any_letter_replace_that_with_n_a
if the word starts with any letter replace that with n a
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _a _n
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _a _n
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _a _n #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _a _n #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _a _n
###re2_train_23_if_there_is_any_letter_replace_that_with_k
if there is any letter replace that with k
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _k
_rflatten map _k _rsplit _rempty
_rflatten map _k _rsplit _rnot _a
_rflatten map _k _rsplit _rnot _b
_rflatten map _k _rsplit _rnot _rdot
###re2_train_24_if_the_word_starts_with_any_letter_any_letter_add_b_after_that
if the word starts with any letter any letter add b after that
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons car _rrevcdr #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _b car _rrevcdr cdr
###re2_train_26_if_the_word_ends_with_any_letter_replace_that_with_r
if the word ends with any letter replace that with r
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _r _rempty
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _rempty _r
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _r _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _r _rempty
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _rempty _r
###re2_train_29_if_the_word_ends_with_any_letter_any_letter_replace_that_with_o_u
if the word ends with any letter any letter replace that with o u
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _u _o #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rrevcdr
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _u _o #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rrevcdr #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _u _o #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _u _o #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rrevcdr
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _u _o #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rrevcdr
###re2_train_32_if_there_is_p_replace_that_with_f_w
if there is p replace that with f w
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _p _f _w
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _p _f _w
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _p _f _w
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _p _rconcat _f _w
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _p _f _w
###re2_train_34_if_the_word_ends_with_any_letter_add_d_after_that
if the word ends with any letter add d after that
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _d
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _d
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _d #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _d #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _d
###re2_train_35_if_there_is_any_letter_replace_that_with_q_j
if there is any letter replace that with q j
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _j _q
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _j _q
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _j _q
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _rdot _q _j
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) map _rconcat _q _j
###re2_train_37_if_there_is_g_add_q_before_that
if there is g add q before that
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _g _q _g
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _g _q _g
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _g _q _g
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _g _rconcat _q _g
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _g _q _g
###re2_train_39_if_there_is_c_add_d_before_that
if there is c add d before that
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _c _d _c
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _c _d _c
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _c _d _c
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _c _rconcat _d _c
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _c _d _c
###re2_train_41_if_there_is_any_letter_add_v_after_that
if there is any letter add v after that
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _v
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _v
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rconcat _v
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) map _rconcat _v
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _v
###re2_train_47_if_there_is_u_replace_that_with_l_q
if there is u replace that with l q
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _u _l _q
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _u _l _q
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _u _l _q
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _u _rconcat _l _q
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _u _l _q
###re2_train_49_if_the_word_starts_with_consonant_e_add_l_before_that
if the word starts with consonant e add l before that
#(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _e cdr _rsplit _rempty #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _l
###re2_train_52_if_the_word_ends_with_any_letter_replace_that_with_f
if the word ends with any letter replace that with f
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _f _rrevcdr
_rflatten _rappend _f _rrevcdr _rsplit _rempty
_rflatten _rappend _f _rrevcdr _rsplit _rnot _rdot
_rflatten _rappend _f _rrevcdr _rsplit _rnot _a
_rflatten _rappend _f _rrevcdr _rsplit _rnot _p
###re2_train_53_if_the_word_ends_with_any_letter_replace_that_with_t_m
if the word ends with any letter replace that with t m
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _m _t
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _rconcat _t _m _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _rempty _rappend _m _rappend _t _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _m _rappend _t _rrevcdr _rsplit _rempty
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _m _t #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _m _rrevcdr
###re2_train_60_if_the_word_starts_with_any_letter_replace_that_with_e_e
if the word starts with any letter replace that with e e
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _e _e
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _e _e
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _e _e #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _e _e #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _e _e
###re2_train_66_if_the_word_starts_with_any_letter_any_letter_add_j_before_that
if the word starts with any letter any letter add j before that
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _j
_rflatten cons _j _rsplit _rempty
_rflatten cons _j _rsplit _a
_rflatten cons _j _rsplit _p
_rflatten cons _j _rsplit _b
###re2_train_67_if_there_is_any_letter_replace_that_with_j
if there is any letter replace that with j
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _j
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _j
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _j
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _rdot _j
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) map _j
###re2_train_68_if_there_is_any_letter_replace_that_with_h_s
if there is any letter replace that with h s
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _s _h
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _s _h
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _s _h
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _rdot _h _s
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _h _s
###re2_train_71_if_the_word_starts_with_any_letter_replace_that_with_w_i
if the word starts with any letter replace that with w i
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _i _w
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _i _w
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _i _w #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _i _w #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _i _w
###re2_train_76_if_there_is_r_replace_that_with_j
if there is r replace that with j
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _r _j
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) if _rmatch _rnot _r _j
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _rconcat _r _rempty _j
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) if _rmatch _r if _rmatch _p _e _j
###re2_train_77_if_there_is_t_replace_that_with_t_x
if there is t replace that with t x
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _t _t _x
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _t _t _x
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _t #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rconcat _t _x
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _t #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _t _x
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _t #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _t _t _x _t
###re2_train_78_if_the_word_starts_with_any_letter_replace_that_with_y_w
if the word starts with any letter replace that with y w
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _w _y
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _w _y
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _w _y #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _w _y #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _w _y
###re2_train_81_if_the_word_starts_with_any_letter_replace_that_with_c_v
if the word starts with any letter replace that with c v
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _v _c
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _v _c
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _v _c #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _v _c #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _v _c
###re2_train_88_if_there_is_b_replace_that_with_y_a
if there is b replace that with y a
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _b _y _a
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _b _y _a
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _b _y _a
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _b _rconcat _y _a
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _b _y _a
###re2_train_99_if_there_is_t_replace_that_with_d_q
if there is t replace that with d q
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _t _d _q
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _t _d _q
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _t #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rconcat _d _q
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _t #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _d _q
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _t #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _t _d _q _i
###re2_train_103_if_the_word_starts_with_any_letter_replace_that_with_q_a
if the word starts with any letter replace that with q a
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _a _q
_rflatten #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _rsplit _rempty _a _q
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _q cdr _rsplit _rdot _rflatten #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _a _a
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _rsplit _rdot _rflatten cons _a cdr _a _q
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _q cdr _rsplit _rdot _rflatten #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _a _q
###re2_train_109_if_there_is_d_replace_that_with_c_t
if there is d replace that with c t
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _d _c _t
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _d #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rconcat _c _t
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _d _c _t
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _d #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _c _t
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _d #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _d _c _t _rconcat _e _t
###re2_train_111_if_the_word_starts_with_any_letter_replace_that_with_g_a
if the word starts with any letter replace that with g a
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _a _g
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _rconcat _g _a cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _g #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _a cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _g cons _a #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _a _g #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
###re2_train_113_if_there_is_any_letter_replace_that_with_p
if there is any letter replace that with p
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _p
_rflatten map _p _rsplit _rempty
_rflatten map _p _rsplit _rnot _a
_rflatten map _p _rsplit _rnot _b
_rflatten map _p _rsplit _rnot _rdot
###re2_train_116_if_the_word_starts_with_consonant_any_letter_replace_that_with_f
if the word starts with consonant any letter replace that with f
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _o #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _e #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _rempty _f
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _e #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _o #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _rempty _f
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _e _e _o #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _rempty _f
#(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _e _rsplit _rempty #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _o #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _rempty _f
#(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _o _rsplit _rempty #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _e #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _rempty _f
###re2_train_118_if_there_is_l_replace_that_with_n_k
if there is l replace that with n k
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _l _n _k
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _l #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _l _n _k _k
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _l #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _l _n _k _y
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _l #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _l _n _k _rconcat _i _k
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _l #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _l _n _k _rconcat _n _k
###re2_train_121_if_there_is_t_add_y_after_that
if there is t add y after that
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _t _t _y
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _t _t _y
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _t _t _y
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _t _rconcat _t _y
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _t _t _y
###re2_train_127_if_the_word_starts_with_any_letter_replace_that_with_i_r
if the word starts with any letter replace that with i r
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _r _i
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _r _i
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _r _i #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _r _i #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _r _i
###re2_train_129_if_there_is_any_letter_replace_that_with_r_v
if there is any letter replace that with r v
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _v _r
_rflatten map _rconcat _r _v _rsplit _rempty
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) map _rconcat _r _v _rappend _i _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) map _rconcat _r _v cons _a cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) map _rconcat _r _v cons _rconcat _r _v cdr
###re2_train_132_if_the_word_ends_with_any_letter_consonant_replace_that_with_d_t
if the word ends with any letter consonant replace that with d t
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _t _d #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rrevcdr
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _t _d #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rrevcdr
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _t _d #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rrevcdr #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _t _d #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rrevcdr
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _t _d #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rrevcdr
###re2_train_133_if_there_is_p_add_p_after_that
if there is p add p after that
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _p _p _p
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _p #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rconcat _p _p
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _p _p _p
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _p #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _p _p
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _p #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rconcat _p _p
###re2_train_134_if_the_word_starts_with_any_letter_add_f_before_that
if the word starts with any letter add f before that
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _f
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _f
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _f #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _f #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _f
###re2_train_135_if_there_is_any_letter_replace_that_with_f_n
if there is any letter replace that with f n
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _n _f
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _rdot _f _n
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _n _f
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _n _f
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _n _rconcat _f
###re2_train_137_if_there_is_p_replace_that_with_g
if there is p replace that with g
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _p _g
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _p _g
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _p #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _g
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _p _rflatten _rsplit _rdot _g
_rflatten _rsplit _rdot #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _p _g
###re2_train_144_if_the_word_ends_with_any_letter_add_p_after_that
if the word ends with any letter add p after that
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _p
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _p
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _p #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _p
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _p #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
###re2_train_150_if_the_word_ends_with_s_remove_that
if the word ends with s remove that
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch _rtail _s _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch _s _rtail _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch _rtail cdr _s _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch _rtail _s _rrevcdr #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch _rtail _s _rrevcdr _rsplit _c
###re2_train_152_if_there_is_r_add_b_before_that
if there is r add b before that
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _r _b _r
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _r _b _r
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _r #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rconcat _b _r
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _r #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _b _r
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _r _rflatten _rsplit _k _rconcat _b _r
###re2_train_159_if_there_is_t_replace_that_with_f_v
if there is t replace that with f v
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _t _f _v
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _t _f _v
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _t _f _v
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _t _rconcat _f _v
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _t _f _v
###re2_train_161_if_there_is_o_replace_that_with_c_g
if there is o replace that with c g
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _o _c _g
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _o _c _g
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _o #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rconcat _c _g
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _o #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _c _g
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _o #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _o _c _g _rconcat _i _g
###re2_train_162_if_there_is_m_remove_that
if there is m remove that
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _m _rempty
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _m _rempty
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _m #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rempty
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _m _rempty _rempty
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _m #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rempty
###re2_train_167_if_there_is_l_replace_that_with_v_q
if there is l replace that with v q
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _l _v _q
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _l _v _q
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _l _v _q
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _l _rconcat _v _q
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _l _v _q
###re2_train_169_if_the_word_starts_with_any_letter_replace_that_with_b
if the word starts with any letter replace that with b
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _b cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _b cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _b #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _b cdr #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
_rflatten cons _b cdr _rsplit _rempty
###re2_train_172_if_there_is_c_replace_that_with_k_b
if there is c replace that with k b
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _c _k _b
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _c _k _b
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _c _k _b
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _c _rconcat _k _b
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _c _k _b
###re2_train_176_if_there_is_n_replace_that_with_q
if there is n replace that with q
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _n _q
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _n _q
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _n #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _q
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _n _q _rempty
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _n _rempty _q
###re2_train_177_if_there_is_e_replace_that_with_t_u
if there is e replace that with t u
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _e _t _u
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _e _t _u
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _e #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rconcat _t _u
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _e #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _e _t _u _u
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rsplit _rempty #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _e _rconcat _t _u
###re2_train_183_if_the_word_starts_with_any_letter_replace_that_with_r_m
if the word starts with any letter replace that with r m
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _m _r
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _m _r
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _m _r #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _m _r #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _m _r
###re2_train_184_if_the_word_starts_with_any_letter_replace_that_with_b_w
if the word starts with any letter replace that with b w
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _w _b
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _rconcat _b _w cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _b #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _w cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _b cons _w #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _w _b #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
###re2_train_185_if_the_word_ends_with_consonant_replace_that_with_a_o
if the word ends with consonant replace that with a o
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _o _a
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _rconcat _a _o _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _o #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _a _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _o _rappend _a #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rrevcdr
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _o _a #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
###re2_train_190_if_the_word_ends_with_any_letter_any_letter_add_f_after_that
if the word ends with any letter any letter add f after that
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _f
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _f
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _f #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _f #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _f
###re2_train_191_if_the_word_starts_with_any_letter_add_d_after_that
if the word starts with any letter add d after that
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _d car
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _d car _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _d car
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _d car #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _d car _rrevcdr _rrevcdr
###re2_train_192_if_there_is_b_replace_that_with_q
if there is b replace that with q
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _b _q
###re2_train_196_if_there_is_n_add_e_after_that
if there is n add e after that
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _n _n _e
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _n _n _e
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _n _n _e
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _n _rconcat _n _e
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _n _n _e
###re2_train_199_if_there_is_d_add_i_after_that
if there is d add i after that
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _d _d _i
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _d _d _i
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _d #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rconcat _d _i
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _d #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _d _i
if _rmatch _s _s #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _d _d _i
###re2_train_203_if_the_word_starts_with_any_letter_replace_that_with_f
if the word starts with any letter replace that with f
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _f cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _f _rempty
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _rempty _f
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _f #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _f cdr #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
###re2_train_208_if_the_word_starts_with_any_letter_any_letter_replace_that_with_w
if the word starts with any letter any letter replace that with w
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _w cdr cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _rempty _w
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _w _rempty
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _w #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cdr cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _w cdr #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cdr
###re2_train_216_if_the_word_ends_with_consonant_replace_that_with_w
if the word ends with consonant replace that with w
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch _rtail _e _rappend _w _rrevcdr
#(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _w
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend if _rmatch _rtail _rsplit _rempty _e _e _w _rrevcdr
#(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _rempty _w
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch _rtail _e _rappend if _rmatch _rtail _e _e _w _rrevcdr
###re2_train_217_if_the_word_starts_with_any_letter_replace_that_with_y_c
if the word starts with any letter replace that with y c
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _c _y
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _c _y
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _c _y #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _c _y #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _c _y
###re2_train_219_if_there_is_any_letter_replace_that_with_y_t
if there is any letter replace that with y t
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _rdot _y _t
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _t _y
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _rdot _y _t
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rdot _y _t
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _t _y
###re2_train_223_if_there_is_any_letter_replace_that_with_n_i
if there is any letter replace that with n i
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _i _n
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _i _n
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _i _n
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _rdot _n _i
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _n _i
###re2_train_229_if_there_is_any_letter_replace_that_with_w_t
if there is any letter replace that with w t
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _t _w
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _t _w
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _t _w
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _rdot _w _t
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) map _rconcat _w _t
###re2_train_230_if_there_is_m_replace_that_with_l
if there is m replace that with l
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _m _l
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _m _l
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _m #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _l
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _m _l _rempty
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _m _rempty _l
###re2_train_237_if_the_word_ends_with_any_letter_replace_that_with_i_y
if the word ends with any letter replace that with i y
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _y _i
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _y _i #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _y _i
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _y _i #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _y _i
###re2_train_241_if_the_word_starts_with_consonant_replace_that_with_g_u
if the word starts with consonant replace that with g u
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _u #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _u _g
#(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _u _rsplit _rempty #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _u _g
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _u _rsplit _rempty #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _u _g
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _u _rsplit _rempty #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _u _g
#(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _u _rsplit _rempty #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _u #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _u _g
###re2_train_243_if_there_is_c_add_u_before_that
if there is c add u before that
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _c _u _c
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _c _u _c
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _c _u _c
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _c _rconcat _u _c
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _c _u _c
###re2_train_244_if_there_is_any_letter_replace_that_with_u_e
if there is any letter replace that with u e
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _e _u
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _e _u
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _e _u
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _rdot _u _e
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) map _rconcat _u _e
###re2_train_246_if_there_is_t_replace_that_with_n
if there is t replace that with n
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _t _n
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _t _n
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _t #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _n
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _t _n _rempty
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _t _rempty _n
###re2_train_250_if_there_is_s_add_x_after_that
if there is s add x after that
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _s _s _x
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _s _s _x
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _s #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _s _x
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _s _rflatten _rsplit _rdot _rconcat _s _x
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _s _rflatten _rsplit _rempty _rconcat _s _x
###re2_train_252_if_there_is_e_replace_that_with_i_m
if there is e replace that with i m
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _e _i _m
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _e _i _m
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _e #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rconcat _i _m
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _e #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _i _m
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _e _rflatten _rsplit _rempty _rconcat _i _m
###re2_train_255_if_the_word_ends_with_e_any_letter_replace_that_with_t
if the word ends with e any letter replace that with t
if _rmatch _rtail _rrevcdr _rsplit _rempty _e #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _t _rrevcdr _rrevcdr
if _rmatch _rtail _rrevcdr cdr _rsplit _rempty _e #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _t _rrevcdr _rrevcdr
if _rmatch _rtail _rrevcdr cdr cdr _rsplit _rempty _e #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _t _rrevcdr _rrevcdr
###re2_train_256_if_the_word_ends_with_consonant_replace_that_with_w_i
if the word ends with consonant replace that with w i
#(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _w _i
#(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _w _i #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _w _i
#(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _w _i #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _w _i
###re2_train_261_if_the_word_starts_with_any_letter_any_letter_add_y_before_that
if the word starts with any letter any letter add y before that
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _y
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _y
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _y #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _y #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _y
###re2_train_264_if_the_word_starts_with_any_letter_replace_that_with_k_e
if the word starts with any letter replace that with k e
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _e _k
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _e _k
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _e _k #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _e _k #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _e _k
###re2_train_265_if_the_word_starts_with_any_letter_replace_that_with_h
if the word starts with any letter replace that with h
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _h cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _h _rempty
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _rempty _h
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _h #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _h cdr #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
###re2_train_268_if_the_word_starts_with_any_letter_replace_that_with_x_e
if the word starts with any letter replace that with x e
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _e _x
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _e _x
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _e _x #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _e _x #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _e _x
###re2_train_269_if_there_is_r_replace_that_with_m_l
if there is r replace that with m l
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _r _m _l
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _r _rflatten _rsplit _rdot _rconcat _m _l
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _r _rflatten _rsplit _x _rconcat _m _l
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _r _rflatten _rsplit _u _rconcat _m _l
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _r #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _r _m _l _rconcat _m _l
###re2_train_270_if_there_is_r_replace_that_with_e_d
if there is r replace that with e d
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _r _e _d
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _r _e _d
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _r #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rconcat _e _d
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _r #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _e _d
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _r #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _r _e _d _rconcat _e _e
###re2_train_271_if_there_is_c_add_e_after_that
if there is c add e after that
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _c _c _e
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _c _c _e
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _c _c _e
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _c _rconcat _c _e
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _c _c _e
###re2_train_275_if_the_word_ends_with_consonant_replace_that_with_r
if the word ends with consonant replace that with r
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch _rtail _e _rappend _r _rrevcdr
#(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _r
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend if _rmatch _rtail cdr _e _e _r _rrevcdr
#(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _r _rempty
#(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _rempty _r
###re2_train_276_if_the_word_starts_with_any_letter_replace_that_with_m_i
if the word starts with any letter replace that with m i
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _i _m
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _i _m
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _i _m #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _i _m #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _i _m
###re2_train_279_if_the_word_ends_with_consonant_replace_that_with_o_c
if the word ends with consonant replace that with o c
#(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _o _c
#(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _o _c #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _o _c
#(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _o _c #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _o _c
###re2_train_280_if_there_is_any_letter_add_q_before_that
if there is any letter add q before that
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _q
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _q
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rconcat _q
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) map _rconcat _q
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _q
###re2_train_289_if_the_word_starts_with_any_letter_replace_that_with_j_o
if the word starts with any letter replace that with j o
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _o _j
_rflatten #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _rsplit _rempty _o _j
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _j cdr _rsplit _rdot _rflatten #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _o _j
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _rsplit _rdot _rflatten cons _j cdr _o _j
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _j cdr _rsplit _rdot _rflatten #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _o _o
###re2_train_293_if_the_word_ends_with_consonant_add_j_after_that
if the word ends with consonant add j after that
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend if _rmatch car _o _rempty _j
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _o _rempty _j
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _o _rrevcdr _rempty _j
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _v cdr _rempty _j
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _o _rempty _j _rsplit _rempty
###re2_train_296_if_there_is_s_replace_that_with_t_q
if there is s replace that with t q
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _s _t _q
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _s _t _q
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _s _t _q
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _s _rconcat _t _q
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _s _t _q
###re2_train_298_if_the_word_ends_with_consonant_add_p_after_that
if the word ends with consonant add p after that
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch _rtail _e _rappend _p
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend if _rmatch _rtail _e _rempty _p
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch _rtail _e map _rappend _p
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) map if _rmatch _rtail _e _rappend _p
if _rmatch _rtail _rsplit _rempty _e #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _p
###re2_train_299_if_there_is_any_letter_replace_that_with_g_i
if there is any letter replace that with g i
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _i _g
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _i _g
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _i _g
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _rdot _g _i
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) map _rconcat _g _i
###re2_train_307_if_the_word_ends_with_any_letter_replace_that_with_o_m
if the word ends with any letter replace that with o m
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _m _o
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _m _o #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _m _o
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _m _o #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _m _o
###re2_train_309_if_the_word_ends_with_consonant_replace_that_with_n_a
if the word ends with consonant replace that with n a
#(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _n _a
#(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _n _a #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _n _a
#(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _n _a #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _n _a
###re2_train_311_if_there_is_g_replace_that_with_k_a
if there is g replace that with k a
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _g _k _a
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _g #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rconcat _k _a
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _g _k _a
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _g #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _k _a
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _g #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _g _k _a _rconcat _a _a
###re2_train_312_if_there_is_any_letter_replace_that_with_h_x
if there is any letter replace that with h x
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _x _h
_rflatten map _rconcat _h _x _rsplit _rempty
_rflatten map _rconcat _h _x _rappend _d _rrevcdr _rsplit _rempty
_rflatten map _rconcat _h _x _rappend _m _rrevcdr _rsplit _rempty
_rflatten map _rconcat _h _x _rappend _x _rrevcdr _rsplit _rempty
###re2_train_316_if_the_word_starts_with_any_letter_replace_that_with_r_r
if the word starts with any letter replace that with r r
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _r _r
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _r _r
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _r _r #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _r _r #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _r _r
###re2_train_319_if_there_is_g_replace_that_with_c
if there is g replace that with c
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _g _c
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _g _c
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _g #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _c
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _g _c _rempty
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _g _rempty _c
###re2_train_322_if_the_word_starts_with_any_letter_replace_that_with_g_b
if the word starts with any letter replace that with g b
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _b _g
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _b _g
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _b _g #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _b _g #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _b _g
###re2_train_325_if_there_is_t_replace_that_with_i
if there is t replace that with i
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _t _i
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _t #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _i
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _t _i
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _t _i
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _t #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _i
###re2_train_327_if_the_word_starts_with_consonant_replace_that_with_i
if the word starts with consonant replace that with i
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _i cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _i _rempty
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _rempty _i
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _i #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _i cdr #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
###re2_train_330_if_there_is_t_replace_that_with_l_p
if there is t replace that with l p
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _t _l _p
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _t #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rconcat _l _p
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _t _l _p
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _t #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _l _p
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _t #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _t _l _p _l
###re2_train_331_if_the_word_ends_with_consonant_replace_that_with_o_g
if the word ends with consonant replace that with o g
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _g _o
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _g _o #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _g _o
#(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _o _g
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _g _o #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
###re2_train_332_if_there_is_a_replace_that_with_u_c
if there is a replace that with u c
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _a _u _c
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _a _u _c
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _a _u _c
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _a _rconcat _u _c
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _a _u _c
###re2_train_341_if_the_word_starts_with_consonant_any_letter_replace_that_with_e_a
if the word starts with consonant any letter replace that with e a
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _a _e
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _a _e
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _a _e #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _a _e #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _a _e #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
###re2_train_344_if_the_word_ends_with_any_letter_add_q_after_that
if the word ends with any letter add q after that
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _q
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _q
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _q #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _q #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _q
###re2_train_354_if_the_word_starts_with_consonant_replace_that_with_i_s
if the word starts with consonant replace that with i s
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _s _i
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _rconcat _i _s cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _s _i
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _i #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _s cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _s _i #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
###re2_train_355_if_the_word_starts_with_any_letter_replace_that_with_g_l
if the word starts with any letter replace that with g l
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _l _g
_rflatten #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _rsplit _rempty _l _g
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _g cdr _rsplit _rdot _rflatten #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _l _g
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _g cdr _rsplit _rdot _rflatten #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _l _l
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _rsplit _rdot _rflatten cons _l cdr _l _g
###re2_train_356_if_the_word_starts_with_any_letter_replace_that_with_m
if the word starts with any letter replace that with m
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _m cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _rempty _m
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _m _rempty
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cdr #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _m _e
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cdr #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _m _i
###re2_train_357_if_there_is_i_replace_that_with_m
if there is i replace that with m
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _i _m
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _i _m
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _i #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _m
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _i _m _rempty
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _i _rempty _m
###re2_train_358_if_there_is_any_letter_replace_that_with_j_u
if there is any letter replace that with j u
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _u _j
_rflatten map _rconcat _j _u _rsplit _rempty
_rflatten map _rconcat _j _u _rsplit _rnot _l
_rflatten map _rconcat _j _u _rappend _c _rrevcdr _rsplit _rempty
_rflatten map _rconcat _j _u _rappend _d _rrevcdr _rsplit _rempty
###re2_train_360_if_there_is_s_replace_that_with_d_u
if there is s replace that with d u
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _s _d _u
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _s _d _u
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _s #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rconcat _d _u
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _s #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _d _u
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _s #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _s _d _u _rconcat _d _u
###re2_train_367_if_the_word_ends_with_consonant_replace_that_with_i_u
if the word ends with consonant replace that with i u
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch _rtail _e _rappend _u _rappend _i _rrevcdr
#(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _i _u
###re2_train_371_if_there_is_p_replace_that_with_a_w
if there is p replace that with a w
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _p _a _w
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _p _a _w
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _p _a _w
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _p _rconcat _a _w
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _p _a _w
###re2_train_372_if_there_is_g_replace_that_with_u_f
if there is g replace that with u f
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _g _u _f
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _g _u _f
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _g _u _f
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _g _rconcat _u _f
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _g _u _f
###re2_train_375_if_the_word_starts_with_any_letter_replace_that_with_a_w
if the word starts with any letter replace that with a w
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _w _a
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _w _a
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _w _a #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _w _a #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _w _a
###re2_train_377_if_the_word_ends_with_any_letter_replace_that_with_r_j
if the word ends with any letter replace that with r j
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _j _r
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _j _r #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _j _r
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _j _r
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _j _r #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
###re2_train_378_if_there_is_any_letter_replace_that_with_i_p
if there is any letter replace that with i p
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _rdot _i _p
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _p _i
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _rdot _i _p
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rdot _i _p
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _p _i
###re2_train_381_if_there_is_any_letter_replace_that_with_n_g
if there is any letter replace that with n g
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _g _n
_rflatten map _rconcat _n _g _rsplit _rempty
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) map _rconcat _n _g _rappend _d _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) map _rconcat _n _g cons _a cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) map _rconcat _n _g map _rconcat _n _g
###re2_train_382_if_the_word_starts_with_any_letter_add_o_after_that
if the word starts with any letter add o after that
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _o car
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _o car _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _o car
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _o car #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _o car _rrevcdr _rrevcdr
###re2_train_385_if_the_word_starts_with_any_letter_replace_that_with_x_i
if the word starts with any letter replace that with x i
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _i _x
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _i _x
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _i _x #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _i _x #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _i _x
###re2_train_388_if_the_word_starts_with_consonant_replace_that_with_q_i
if the word starts with consonant replace that with q i
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _i _q
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _i _q
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _i _q #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _i _q #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _i _q
###re2_train_390_if_the_word_ends_with_any_letter_any_letter_replace_that_with_j
if the word ends with any letter any letter replace that with j
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _j _rrevcdr _rrevcdr
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _j _rempty #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rrevcdr
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _rempty _j #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _j #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rrevcdr _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _j _rrevcdr #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rrevcdr
###re2_train_393_if_the_word_ends_with_consonant_replace_that_with_i
if the word ends with consonant replace that with i
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _i _rrevcdr
_rflatten _rappend _i _rrevcdr _rsplit _rempty
_rflatten _rappend _i _rrevcdr _rsplit _rnot _a
_rflatten _rappend _i _rrevcdr _rsplit _rnot _b
_rflatten _rappend _i _rrevcdr _rsplit _rnot _m
###re2_train_394_if_there_is_t_replace_that_with_k
if there is t replace that with k
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _t _k
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _t _k
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _t #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _k
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _t _k
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _t #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _k
###re2_train_395_if_the_word_starts_with_any_letter_replace_that_with_e_s
if the word starts with any letter replace that with e s
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _s _e
_rflatten #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _rsplit _rempty _s _e
_rflatten cons _e cdr _rsplit _rempty _rflatten #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _rsplit _rempty _s _e
_rflatten #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _rsplit _rempty _rflatten cons _e cdr _rsplit _rempty _s _e
_rflatten cons _e cdr _rsplit _rempty _rflatten #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _rsplit _rempty _s _s
###re2_train_397_if_there_is_s_replace_that_with_h
if there is s replace that with h
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _s _h
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _s _h
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _s #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _h
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _s _h _rempty
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _s _rempty _h
###re2_train_401_if_there_is_r_add_q_after_that
if there is r add q after that
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _r _r _q
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _r _r _q
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _r _r _q
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _r _rconcat _r _q
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _r _r _q
###re2_train_404_if_there_is_u_replace_that_with_b
if there is u replace that with b
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _u _b
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _u #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _b
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _u _b
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _u _b
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _u #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _b
###re2_train_407_if_the_word_starts_with_any_letter_any_letter_replace_that_with_e_s
if the word starts with any letter any letter replace that with e s
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _s _e
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _s _e
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _s _e #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _s _e #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _s _e #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
###re2_train_411_if_there_is_r_replace_that_with_v_a
if there is r replace that with v a
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _r _v _a
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _r _v _a
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _r #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rconcat _v _a
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _r #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _v _a
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _r #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _r _v _a _rconcat _a _a
###re2_train_414_if_there_is_i_replace_that_with_v
if there is i replace that with v
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _i _v
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _i #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _v
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _i _v
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _i _v
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _i #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _v
###re2_train_417_if_there_is_any_letter_add_l_before_that
if there is any letter add l before that
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _l
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _l
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rconcat _l
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) map _rconcat _l
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _l
###re2_train_420_if_the_word_ends_with_consonant_replace_that_with_o_y
if the word ends with consonant replace that with o y
#(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _o _y
#(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _o _y #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _o _y
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _o _y
#(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _o _y #(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _a
###re2_train_427_if_the_word_starts_with_any_letter_any_letter_replace_that_with_f_s
if the word starts with any letter any letter replace that with f s
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _s _f
_rflatten #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _rsplit _rempty _s _f
_rflatten cons _f cdr _rsplit _rempty _rflatten #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _rsplit _rempty _s _s
_rflatten #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _rsplit _rempty _rflatten cons _f cdr cdr _rsplit _rempty _s _f
_rflatten #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _rsplit _rempty _rflatten cons _s cdr cdr _rsplit _rempty _s _f
###re2_train_428_if_the_word_starts_with_any_letter_any_letter_replace_that_with_q
if the word starts with any letter any letter replace that with q
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _q cdr cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _q _rempty
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _rempty _q
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _q #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cdr cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _q cdr #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cdr
###re2_train_429_if_the_word_ends_with_any_letter_any_letter_replace_that_with_r_q
if the word ends with any letter any letter replace that with r q
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _q _r #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rrevcdr
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _q _r #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _q _r #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rrevcdr
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _q _r #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rrevcdr #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _q _rappend _r _rrevcdr _rrevcdr
###re2_train_434_if_the_word_ends_with_any_letter_any_letter_replace_that_with_b_j
if the word ends with any letter any letter replace that with b j
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _j _rappend _b _rrevcdr _rrevcdr
_rflatten _rappend _j _rappend _b _rrevcdr _rrevcdr _rsplit _rempty
_rflatten _rappend _j _rappend _b _rrevcdr _rappend _b _rrevcdr _rrevcdr _rsplit _rempty
_rflatten _rappend _j _rappend _b _rrevcdr _rrevcdr _rappend _b _rrevcdr _rsplit _rempty
_rflatten _rappend _j _rrevcdr _rappend _b _rappend _b _rrevcdr _rrevcdr _rsplit _rempty
###re2_train_439_if_there_is_c_replace_that_with_n_m
if there is c replace that with n m
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _c _n _m
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _c _n _m
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _c #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rconcat _n _m
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _c _rflatten _rsplit _i _rconcat _n _m
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _c _rflatten _rsplit _rempty _rconcat _n _m
###re2_train_441_if_there_is_any_letter_add_b_after_that
if there is any letter add b after that
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _b
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _b
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rconcat _b
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) map _rconcat _b
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _b
###re2_train_442_if_there_is_any_letter_replace_that_with_h_r
if there is any letter replace that with h r
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _r _h
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _r _h
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _r _h
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _rdot _h _r
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _h _r
###re2_train_443_if_the_word_ends_with_any_letter_add_k_after_that
if the word ends with any letter add k after that
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _k
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _k #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _k
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _k #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _k
###re2_train_445_if_the_word_ends_with_any_letter_replace_that_with_x_s
if the word ends with any letter replace that with x s
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _s _x
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _rconcat _x _s _rrevcdr
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _s _x #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _s #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _x _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _s _rappend _x #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rrevcdr
###re2_train_449_if_there_is_d_replace_that_with_a_v
if there is d replace that with a v
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _d _a _v
###re2_train_450_if_the_word_ends_with_any_letter_consonant_replace_that_with_j
if the word ends with any letter consonant replace that with j
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _j _rrevcdr _rrevcdr
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _j _rempty #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rrevcdr
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _rempty _j #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rrevcdr
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _rempty _j #(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rempty
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _j _rempty #(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rempty
###re2_train_451_if_the_word_starts_with_any_letter_e_replace_that_with_m
if the word starts with any letter e replace that with m
#(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _e cdr _rsplit _rempty #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _rempty _m
#(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _e cdr _rsplit _rempty _rflatten #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _rsplit _rempty _rempty _m
###re2_train_462_if_the_word_ends_with_any_letter_any_letter_add_a_after_that
if the word ends with any letter any letter add a after that
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _a
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _a
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _a #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _a #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _a
###re2_train_463_if_the_word_starts_with_any_letter_replace_that_with_a
if the word starts with any letter replace that with a
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _a cdr
_rflatten cons _a cdr _rsplit _rempty
_rflatten cons _a cdr _rsplit _rnot _a
_rflatten cons _a cdr _rsplit _rnot _b
_rflatten cons _a cdr _rsplit _rnot _f
###re2_train_466_if_the_word_ends_with_any_letter_add_u_after_that
if the word ends with any letter add u after that
_rflatten _rappend _u _rsplit _a
_rflatten _rappend _u _rsplit _b
_rflatten _rappend _u _rsplit _c
_rflatten _rappend _u _rsplit _i
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _u
###re2_train_468_if_the_word_ends_with_any_letter_replace_that_with_x_p
if the word ends with any letter replace that with x p
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _p _x
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _p _x
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _p _x #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _p _x
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _p _x #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
###re2_train_469_if_there_is_p_add_o_after_that
if there is p add o after that
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _p _p _o
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _p _p _o
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _p _p _o
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _p _rconcat _p _o
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _p _p _o
###re2_train_471_if_there_is_o_add_r_before_that
if there is o add r before that
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _o _r _o
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _o #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rconcat _r _o
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _o _r _o
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _o #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _r _o
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _o if _rmatch _f _s _rconcat _r _o
###re2_train_472_if_the_word_starts_with_any_letter_add_v_before_that
if the word starts with any letter add v before that
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _v
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _v
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _v #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _v #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _v
###re2_train_473_if_there_is_o_replace_that_with_l
if there is o replace that with l
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _o _l
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _o _l
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _o #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _l
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _o _l
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _o #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _l
###re2_train_474_if_there_is_t_replace_that_with_o
if there is t replace that with o
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _t _o
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _t _o
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _t #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _o
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _t _o _rempty
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _t _rempty _o
###re2_train_477_if_there_is_s_replace_that_with_i_r
if there is s replace that with i r
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _s _i _r
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _s _i _r
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _s _i _r
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _s _rconcat _i _r
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _s _i _r
###re2_train_483_if_the_word_ends_with_consonant_replace_that_with_b_a
if the word ends with consonant replace that with b a
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch _rtail _e _rappend _a _rappend _b _rrevcdr
#(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _b _a
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend if _rmatch _rtail cdr _e _e _rconcat _b _a _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend if _rmatch _rtail _rsplit _rempty _e _e _rconcat _b _a _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend if _rmatch _rtail cons _b cdr _e _e _rconcat _b _a _rrevcdr
###re2_train_484_if_the_word_ends_with_consonant_replace_that_with_j_q
if the word ends with consonant replace that with j q
#(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _j _q
###re2_train_485_if_there_is_l_add_m_before_that
if there is l add m before that
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _l _m _l
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _l _m _l
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _l _m _l
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _l _rconcat _m _l
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _l _m _l
###re2_train_486_if_the_word_starts_with_any_letter_add_b_before_that
if the word starts with any letter add b before that
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _b
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _b
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _b #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _b #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _b
###re2_train_487_if_the_word_starts_with_consonant_add_a_before_that
if the word starts with consonant add a before that
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _a
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _a
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _a #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _a #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _a
###re2_train_490_if_there_is_any_letter_replace_that_with_l
if there is any letter replace that with l
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _l
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _l
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _l
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _rdot _l
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) map _l
###re2_train_491_if_the_word_ends_with_any_letter_replace_that_with_o_j
if the word ends with any letter replace that with o j
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _j _o
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _j _o #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _j _o
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _j _o #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _j _o
###re2_train_493_if_there_is_s_replace_that_with_r_a
if there is s replace that with r a
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _s _r _a
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _s _r _a
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _s _r _a
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _s _rconcat _r _a
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _s _r _a
###re2_train_494_if_the_word_starts_with_any_letter_replace_that_with_s_b
if the word starts with any letter replace that with s b
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _b _s
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _rconcat _s _b cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _s #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _b cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _s cons _b #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _b _s #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
###re2_train_495_if_the_word_ends_with_any_letter_replace_that_with_c_v
if the word ends with any letter replace that with c v
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _v _c
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _rconcat _c _v _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _v _rappend _c #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rrevcdr
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _v _c #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _v #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _c _rrevcdr
###re2_train_504_if_there_is_e_replace_that_with_p
if there is e replace that with p
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _e _p
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _e _p
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _e #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _p
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _e _p
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _e #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _p
###re2_train_507_if_the_word_ends_with_s_add_x_after_that
if the word ends with s add x after that
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch _rtail _s _rappend _x
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend if _rmatch _rtail _s _x _rempty
###re2_train_509_if_the_word_starts_with_any_letter_a_replace_that_with_q_d
if the word starts with any letter a replace that with q d
#(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _a cdr _rsplit _rempty #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _d _q
#(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _a cdr _rsplit _rempty #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _rsplit _rempty _d _q
#(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _a cdr _rsplit _rempty #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _e #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _d _q
#(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _a cdr _rsplit _rempty #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _e _rempty _d _q
###re2_train_513_if_the_word_ends_with_any_letter_replace_that_with_b_a
if the word ends with any letter replace that with b a
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _a _b
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _rconcat _b _a _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _a _rappend _b _rrevcdr _rappend _a _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _a _rrevcdr _rappend _a _rappend _b _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _a _rappend _b _rrevcdr _rappend _b _rrevcdr
###re2_train_514_if_there_is_r_replace_that_with_g_e
if there is r replace that with g e
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _r _g _e
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _r _g _e
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _r #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rconcat _g _e
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _r #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _g _e
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _r #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _r _g _e _rconcat _v _e
###re2_train_521_if_there_is_d_replace_that_with_p
if there is d replace that with p
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _d _p
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _d _p
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _d #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _p
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _d _p _rempty
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _d _rempty _p
###re2_train_522_if_there_is_any_letter_replace_that_with_f_h
if there is any letter replace that with f h
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _h _f
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _h _f
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _h _f
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _rdot _f _h
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _f _h
###re2_train_523_if_the_word_ends_with_consonant_replace_that_with_x_i
if the word ends with consonant replace that with x i
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch _rtail _e _rappend _i _rappend _x _rrevcdr
#(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _x _i
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch _rtail _e _rappend if _rmatch _rtail _e _e _rconcat _x _i _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch _rtail _a _rappend if _rmatch _rtail _e _e _rconcat _x _i _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch _rtail _e _rappend if _rmatch _rtail _a _e _rconcat _x _i _rrevcdr
###re2_train_526_if_the_word_ends_with_any_letter_any_letter_replace_that_with_t_w
if the word ends with any letter any letter replace that with t w
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _w _rappend _t _rrevcdr _rrevcdr
_rflatten _rappend _w _rappend _t _rrevcdr _rrevcdr _rsplit _rempty
_rflatten _rappend _w _rappend _t _rrevcdr _rappend _t _rrevcdr _rrevcdr _rsplit _rempty
_rflatten _rappend _w _rappend _t _rrevcdr _rrevcdr _rappend _t _rrevcdr _rsplit _rempty
_rflatten _rappend _w _rrevcdr _rappend _t _rappend _t _rrevcdr _rrevcdr _rsplit _rempty
###re2_train_527_if_there_is_n_replace_that_with_g_g
if there is n replace that with g g
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _n _g _g
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _n _g _g
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _n _g _g
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _n _rconcat _g _g
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _n _g _g
###re2_train_529_if_there_is_i_replace_that_with_u_u
if there is i replace that with u u
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _i _u _u
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _i _u _u
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _i _u _u
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _i _rconcat _u _u
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _i _u _u
###re2_train_530_if_there_is_h_add_p_after_that
if there is h add p after that
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _h _h _p
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _h _h _p
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _h _h _p
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _h _rconcat _h _p
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _h _h _p
###re2_train_536_if_the_word_ends_with_any_letter_replace_that_with_x_m
if the word ends with any letter replace that with x m
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _m _x
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _rconcat _x _m _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _m #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _x _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _m _rappend _x #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rrevcdr
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _m _x #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
###re2_train_537_if_there_is_any_letter_add_x_after_that
if there is any letter add x after that
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _x
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _x
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rconcat _x
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) map _rconcat _x
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _x
###re2_train_541_if_the_word_starts_with_any_letter_replace_that_with_m_k
if the word starts with any letter replace that with m k
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _k _m
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _k _m
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _k _m #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _k _m #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _k _m
###re2_train_542_if_the_word_starts_with_any_letter_replace_that_with_p_e
if the word starts with any letter replace that with p e
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _e _p
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _e _p
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _e _p #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _e _p
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _e _p #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
###re2_train_545_if_there_is_any_letter_replace_that_with_g_x
if there is any letter replace that with g x
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _x _g
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _x _g
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _x _g
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _rdot _g _x
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _g _x
###re2_train_549_if_the_word_ends_with_s_add_e_before_that
if the word ends with s add e before that
if _rmatch _rtail _rsplit _rempty _s #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _s _e
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch _rtail _s _rappend _s _rappend _e _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch _rtail _s _rappend _rtail _rappend _e _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch _rtail _s _rappend _rtail _rsplit _rempty _rappend _e _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch _rtail _rsplit _rempty _s _rappend _rtail _rappend _e _rrevcdr
###re2_train_553_if_there_is_h_replace_that_with_a
if there is h replace that with a
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _h _a
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _h _a
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _h #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _a
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _h _a
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _h #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _a
###re2_train_556_if_there_is_p_replace_that_with_r_t
if there is p replace that with r t
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _p _r _t
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _p _r _t
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _p #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rconcat _r _t
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _p #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _r _t
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _p #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _p _r _t _rconcat _a _t
###re2_train_559_if_there_is_n_replace_that_with_s
if there is n replace that with s
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _n _s
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _n _s
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _n #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _s
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _n _s
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _n #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _s
###re2_train_562_if_the_word_ends_with_any_letter_replace_that_with_y_b
if the word ends with any letter replace that with y b
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _b _y
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _b _y #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _b _y
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _b _y #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _b _y
###re2_train_566_if_there_is_h_replace_that_with_k_s
if there is h replace that with k s
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _h _k _s
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _h _k _s
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _h _k _s
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _h _rconcat _k _s
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _h _k _s
###re2_train_567_if_the_word_starts_with_any_letter_add_l_after_that
if the word starts with any letter add l after that
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _l car _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _rsplit _rempty _l car _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _l car _rrevcdr _rsplit _rempty
_rflatten #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _rsplit _rempty _l car _rrevcdr _rsplit _rempty
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _l car _rrevcdr _rrevcdr
###re2_train_569_if_the_word_starts_with_any_letter_add_d_before_that
if the word starts with any letter add d before that
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _d
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _d
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _d #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _d #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _d
###re2_train_570_if_there_is_t_replace_that_with_k_s
if there is t replace that with k s
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _t _k _s
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _t _k _s
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _t #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rconcat _k _s
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _t #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _t _k _s _rconcat _a _s
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _t #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _t _k _s _rconcat _k _x
###re2_train_573_if_the_word_starts_with_consonant_replace_that_with_f_j
if the word starts with consonant replace that with f j
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _j _f
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _j _f
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _j _f #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _j _f #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _j _f
###re2_train_577_if_the_word_starts_with_any_letter_replace_that_with_j_p
if the word starts with any letter replace that with j p
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _p _j
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _p _j
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _p _j #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _p _j #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _p _j
###re2_train_583_if_the_word_starts_with_any_letter_add_x_before_that
if the word starts with any letter add x before that
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _x
_rflatten cons _x _rsplit _rempty
_rflatten cons _x _rsplit _a
_rflatten cons _x _rsplit _p
_rflatten cons _x _rsplit _b
###re2_train_585_if_there_is_any_letter_add_r_after_that
if there is any letter add r after that
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _r
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _r
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rconcat _r
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) map _rconcat _r
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _r
###re2_train_586_if_the_word_ends_with_any_letter_consonant_replace_that_with_k_t
if the word ends with any letter consonant replace that with k t
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch _rtail _e _rappend _t _rappend _k _rrevcdr _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch _rtail _e _rappend _t _rappend _k _rrevcdr _rrevcdr _rsplit _rempty
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch _rtail _rsplit _rempty _e _rappend _t _rappend _k _rrevcdr _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _a _rmatch _rtail _e _rmatch _rtail _e _rappend _t _rappend _k _rrevcdr _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if if _rmatch _rtail _e _rmatch _rtail _e _rmatch _rtail _e _rappend _t _rappend _k _rrevcdr _rrevcdr
###re2_train_590_if_the_word_starts_with_any_letter_any_letter_replace_that_with_e_o
if the word starts with any letter any letter replace that with e o
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _o _e
_rflatten #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _rsplit _rempty _o _e
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _e cdr _rsplit _rdot _rflatten #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _o _e
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _rsplit _rdot _rflatten cons _e cdr cdr _o _e
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _rsplit _rdot _rflatten cons _e cdr _o _e
###re2_train_594_if_the_word_starts_with_any_letter_any_letter_add_p_before_that
if the word starts with any letter any letter add p before that
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _p
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _p
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _p #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _p
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _p #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
###re2_train_599_if_there_is_n_replace_that_with_m
if there is n replace that with m
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _n _m
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _n _m
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _n #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _m
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _n _m _rempty
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _n _rempty _m
###re2_train_603_if_the_word_starts_with_any_letter_replace_that_with_u_p
if the word starts with any letter replace that with u p
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _p _u
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _p _u
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _p _u #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _p _u #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _p _u
###re2_train_607_if_the_word_starts_with_any_letter_replace_that_with_l_c
if the word starts with any letter replace that with l c
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _c _l
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _c _l
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _c _l #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _c _l #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _c _l
###re2_train_608_if_the_word_starts_with_any_letter_replace_that_with_i_e
if the word starts with any letter replace that with i e
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _e _i
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _e _i
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _e _i #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _e _i #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _e _i
###re2_train_609_if_the_word_starts_with_any_letter_any_letter_replace_that_with_r_n
if the word starts with any letter any letter replace that with r n
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _n _r
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _n _r
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _n _r #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _n _r #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _n _r #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
###re2_train_611_if_there_is_any_letter_i_add_e_after_that
if there is any letter i add e after that
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _i _i _e
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _i _i _e
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _i #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _i _e
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _i _rflatten _rsplit _rdot _rconcat _i _e
_rflatten _rsplit _rdot #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _i _i _e
###re2_train_615_if_there_is_i_replace_that_with_k
if there is i replace that with k
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _i _k
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _i _k
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _i #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _k
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _i _rempty _k
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _i _k _rempty
###re2_train_620_if_the_word_ends_with_any_letter_replace_that_with_d_k
if the word ends with any letter replace that with d k
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _k _d
_rflatten _rappend _k _rappend _d _rrevcdr _rsplit _rempty
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _rconcat _d _k _rrevcdr
_rflatten _rappend _rconcat _d _k _rrevcdr _rsplit _rempty
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _k _rappend _d _rrevcdr _rsplit _rdot _rflatten _rappend _d _rrevcdr
###re2_train_625_if_the_word_starts_with_any_letter_replace_that_with_v_q
if the word starts with any letter replace that with v q
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _q _v
_rflatten #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _rsplit _rempty _q _v
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _v cdr _rsplit _rdot _rflatten #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _q _v
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _rsplit _rdot _rflatten cons _v cdr _q _v
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _v cdr _rsplit _rdot _rflatten #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _q _q
###re2_train_627_if_the_word_ends_with_s_replace_that_with_p
if the word ends with s replace that with p
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch _rtail _s _rappend _p _rrevcdr
if _rmatch _rtail _rsplit _rempty _s #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _p _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch _rtail _s _rappend _p _rrevcdr _rappend _rtail _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch _rtail _s if _rmatch _rtail _e _rappend _p _rrevcdr
if _rmatch _rtail _rsplit _rempty _s #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch _rtail _e _rappend _p _rrevcdr
###re2_train_628_if_the_word_ends_with_consonant_replace_that_with_q_w
if the word ends with consonant replace that with q w
#(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _q _w
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _q _w
#(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _q _w #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _q _w #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _q _w
###re2_train_630_if_there_is_o_replace_that_with_j
if there is o replace that with j
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _o _j
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _o _j
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _o #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _j
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _o _j _rempty
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _o _rempty _j
###re2_train_632_if_the_word_starts_with_consonant_any_letter_add_c_before_that
if the word starts with consonant any letter add c before that
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _e cons _c
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _e cons _c _rsplit _m
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _e cons _c _rsplit _rempty
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _e _rsplit _rempty cons _c
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _e _rsplit _rempty cons _c
###re2_train_640_if_the_word_starts_with_any_letter_add_t_before_that
if the word starts with any letter add t before that
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _t
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _t
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _t #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
_rflatten cons _t _rsplit _p
_rflatten cons _t _rsplit _a
###re2_train_641_if_the_word_ends_with_consonant_replace_that_with_u_a
if the word ends with consonant replace that with u a
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch _rtail _e _rappend _rconcat _u _a _rrevcdr
#(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _u _a
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch _rtail _e _rappend if _rmatch _rtail _e _e _rconcat _u _a _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch _rtail _e _rappend #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _e _e _rconcat _u _a _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _e _rappend if _rmatch _rtail _e _e _rconcat _u _a _rrevcdr
###re2_train_644_if_the_word_starts_with_any_letter_replace_that_with_b_a
if the word starts with any letter replace that with b a
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _a _b
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _a _b
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _a _b #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _a _b #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _a _b
###re2_train_650_if_the_word_ends_with_any_letter_replace_that_with_l_n
if the word ends with any letter replace that with l n
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _n _l
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _n _l
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _n _l #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _n _l
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _n _l #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
###re2_train_653_if_there_is_a_replace_that_with_v
if there is a replace that with v
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _a _v
###re2_train_659_if_there_is_p_replace_that_with_e
if there is p replace that with e
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) if _rmatch _p _e
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _p _e
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat if _rmatch _p _e _rempty
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _rempty if _rmatch _p _e
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) if _rmatch _ror _h _p _e
###re2_train_661_if_there_is_any_letter_add_c_before_that
if there is any letter add c before that
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _c
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _c
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rconcat _c
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) map _rconcat _c
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _c
###re2_train_662_if_there_is_s_replace_that_with_v
if there is s replace that with v
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _s _v
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _s _v
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _s #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _v
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _s _v
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _s #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _v
###re2_train_664_if_the_word_ends_with_consonant_replace_that_with_n
if the word ends with consonant replace that with n
#(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _n
#(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _n _rempty
#(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _rempty _n
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _i _e _rconcat _n _rempty _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend if _rmatch _rtail _rsplit _rempty _e _e _rconcat _n _rempty _rrevcdr
###re2_train_668_if_there_is_g_replace_that_with_i_l
if there is g replace that with i l
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _g _i _l
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _g _i _l
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _g _i _l
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _g _rconcat _i _l
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _g _i _l
###re2_train_670_if_there_is_any_letter_replace_that_with_j_h
if there is any letter replace that with j h
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _h _j
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _h _j
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _h _j
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _rdot _j _h
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _j _h
###re2_train_673_if_the_word_ends_with_any_letter_replace_that_with_m_y
if the word ends with any letter replace that with m y
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _y _m
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _rconcat _m _y _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _rconcat _m _y #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _rconcat _m _y _rrevcdr #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _y _m #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _m _rrevcdr
###re2_train_674_if_there_is_any_letter_replace_that_with_x_o
if there is any letter replace that with x o
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _o _x
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _o _x
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _o _x
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _rdot _x _o
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) map _rconcat _x _o
###re2_train_676_if_there_is_any_letter_add_k_before_that
if there is any letter add k before that
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _k
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _k
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rconcat _k
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) map _rconcat _k
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _k
###re2_train_677_if_there_is_any_letter_replace_that_with_n_w
if there is any letter replace that with n w
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _w _n
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _w _n
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _w _n
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _rdot _n _w
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) map _rconcat _n _w
###re2_train_679_if_the_word_starts_with_any_letter_replace_that_with_q
if the word starts with any letter replace that with q
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _q cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _q _rempty
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _rempty _q
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cdr #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _q _e
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cdr #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _q _i
###re2_train_683_if_there_is_any_letter_replace_that_with_x_j
if there is any letter replace that with x j
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _j _x
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _j _x
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _j _x
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _rdot _x _j
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) map _rconcat _x _j
###re2_train_686_if_there_is_g_replace_that_with_n
if there is g replace that with n
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _g _n
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _g _n
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _g #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _n
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _g _n _rempty
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _g _rempty _n
###re2_train_690_if_there_is_a_double_that
if there is a double that
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _a _a _a
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _a _a _a
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _a _a _a
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _a _rconcat _a _a
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _a _a _a
###re2_train_691_if_the_word_ends_with_s_add_m_before_that
if the word ends with s add m before that
if _rmatch _rtail _rsplit _rempty _s #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _s _m
if _rmatch _rtail cdr _rsplit _rempty _s #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _s _m
if _rmatch _rtail _rsplit _rempty _s #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _s _m #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _x _rrevcdr
if _rmatch _rtail _rsplit _rempty _s #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _s _m #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch _rtail _s
if _rmatch _rtail _rsplit _rempty _s #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _s _m #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch _rtail _s _rappend _x _rrevcdr
###re2_train_694_if_the_word_starts_with_consonant_add_d_after_that
if the word starts with consonant add d after that
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _e _rempty _d car _rrevcdr
###re2_train_700_if_there_is_s_add_x_before_that
if there is s add x before that
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _s _x _s
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _s _x _s
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _s _x _s
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _s _rconcat _x _s
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _s _x _s
###re2_train_703_if_the_word_starts_with_consonant_replace_that_with_t_d
if the word starts with consonant replace that with t d
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _e #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _d _t
###re2_train_705_if_the_word_ends_with_any_letter_replace_that_with_b
if the word ends with any letter replace that with b
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _b _rempty
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _rempty _b
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _b _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _b _rempty
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _rempty _b
###re2_train_706_if_the_word_starts_with_any_letter_replace_that_with_g_t
if the word starts with any letter replace that with g t
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _t _g
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _t _g
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _t _g #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _t _g #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _t _g
###re2_train_709_if_there_is_s_replace_that_with_q
if there is s replace that with q
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _s _q
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _s _q
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _s #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _q
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _s _q
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _s #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _q
###re2_train_711_if_the_word_starts_with_any_letter_replace_that_with_p_n
if the word starts with any letter replace that with p n
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _n _p
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _n _p
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _n _p #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _n _p #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _n _p
###re2_train_713_if_there_is_t_replace_that_with_c_y
if there is t replace that with c y
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _t _c _y
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _t _c _y
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _t _c _y
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _t _rconcat _c _y
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _t _c _y
###re2_train_716_if_there_is_m_add_l_before_that
if there is m add l before that
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _m _l _m
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _m _l _m
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _m #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rconcat _l _m
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _m #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _m _l _m _m
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _m #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _m _m _rconcat _l _m
###re2_train_718_if_the_word_starts_with_any_letter_replace_that_with_b_k
if the word starts with any letter replace that with b k
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _k _b
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _k _b
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _k _b #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _k _b #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _k _b
###re2_train_721_if_there_is_e_replace_that_with_u
if there is e replace that with u
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _e _u
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _e #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _u
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _e _u
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _e _u
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _e #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _u
###re2_train_722_if_the_word_starts_with_any_letter_replace_that_with_j_w
if the word starts with any letter replace that with j w
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _w _j
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _w _j
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _w _j #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _w _j
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _w _j #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
###re2_train_724_if_there_is_any_letter_replace_that_with_j_f
if there is any letter replace that with j f
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _f _j
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _f _j
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _f _j
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _rdot _j _f
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) map _rconcat _j _f
###re2_train_726_if_there_is_any_letter_replace_that_with_i_v
if there is any letter replace that with i v
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _v _i
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _v _i
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _v _i
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _rdot _i _v
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) map _rconcat _i _v
###re2_train_727_if_the_word_starts_with_any_letter_any_letter_replace_that_with_k
if the word starts with any letter any letter replace that with k
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _k cdr cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _k _rempty
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _rempty _k
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _k #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cdr cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _k cdr #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cdr
###re2_train_731_if_the_word_ends_with_consonant_replace_that_with_m_a
if the word ends with consonant replace that with m a
#(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _m _a
#(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _m _a #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _m _a
#(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _m _a #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _m _a
###re2_train_734_if_there_is_t_add_d_before_that
if there is t add d before that
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _t _d _t
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _t _d _t
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _t #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rconcat _d _t
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _t #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _d _t
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _t _rflatten _rsplit _m _rconcat _d _t
###re2_train_737_if_there_is_any_letter_add_y_after_that
if there is any letter add y after that
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _y
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _y
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rconcat _y
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) map _rconcat _y
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _y
###re2_train_739_if_the_word_starts_with_any_letter_replace_that_with_s_n
if the word starts with any letter replace that with s n
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _n _s
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _rconcat _s _n cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _s #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _n cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _s cons _n #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _n _s #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
###re2_train_743_if_the_word_ends_with_any_letter_any_letter_replace_that_with_k
if the word ends with any letter any letter replace that with k
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _k _rrevcdr _rrevcdr
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _rempty _k #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rrevcdr
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _k _rempty #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _k #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rrevcdr _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _k _rrevcdr #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rrevcdr
###re2_train_750_if_there_is_p_replace_that_with_a
if there is p replace that with a
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _p _a
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _p _a
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _p #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _a
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _p _a
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _p #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _a
###re2_train_753_if_the_word_starts_with_any_letter_any_letter_replace_that_with_h_t
if the word starts with any letter any letter replace that with h t
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _t _h
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _t _h
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _t _h #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _t _h #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _t _h #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
###re2_train_755_if_the_word_starts_with_any_letter_replace_that_with_n_g
if the word starts with any letter replace that with n g
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _g _n
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _g _n
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _g _n #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _g _n #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _g _n
###re2_train_756_if_the_word_starts_with_consonant_replace_that_with_m_y
if the word starts with consonant replace that with m y
#(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _n cdr _rsplit _rempty #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _y _m
#(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _n cdr _rsplit _rempty #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _e #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _y _m
#(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _n cdr _rsplit _rempty #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _a #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _y _m
#(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _n cdr _rsplit _rempty #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _n #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _y _m
#(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _n cdr _rsplit _rempty #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _n cdr #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _y _m
###re2_train_759_if_there_is_l_replace_that_with_n
if there is l replace that with n
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _l _n
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _l _n
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _l #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _n
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _l _n
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _l #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _n
###re2_train_760_if_there_is_any_letter_add_h_after_that
if there is any letter add h after that
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _h
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _h
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _h
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rflatten _rsplit _rdot _rconcat _h
_rflatten _rsplit _rdot #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _h
###re2_train_763_if_the_word_ends_with_any_letter_add_f_before_that
if the word ends with any letter add f before that
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _rtail _rsplit _rempty _f
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _rtail _rsplit _rdot _f
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _rtail _rappend _f _rrevcdr
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _rtail cdr _rsplit _rempty _f
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _rtail cdr _rsplit _rdot _f
###re2_train_764_if_the_word_starts_with_any_letter_replace_that_with_b_n
if the word starts with any letter replace that with b n
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _n _b
_rflatten #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _rsplit _rempty _n _b
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _b cdr _rsplit _rdot _rflatten #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _n _b
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _rsplit _rdot _rflatten cons _b cdr _n _b
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _b cdr _rsplit _rdot _rflatten #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _n _n
###re2_train_768_if_the_word_ends_with_consonant_replace_that_with_q_x
if the word ends with consonant replace that with q x
#(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _q _x
#(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _q _x #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _q _x
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _q _x
#(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _q _x #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch _rtail _e
###re2_train_771_if_the_word_starts_with_consonant_replace_that_with_r
if the word starts with consonant replace that with r
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch car _a #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _rempty _r
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _a #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _rempty _r
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _a _rrevcdr #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _rempty _r
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch car _rsplit _rempty _a #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _rempty _r
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _a _rappend _r _rrevcdr #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _rempty _r
###re2_train_772_if_there_is_e_replace_that_with_e_h
if there is e replace that with e h
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _e _e _h
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _e _e _h
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _e _e _h
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _e _rconcat _e _h
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _e _e _h
###re2_train_774_if_there_is_any_letter_replace_that_with_f_m
if there is any letter replace that with f m
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _m _f
_rflatten map _rconcat _f _m _rsplit _rempty
_rflatten map _rconcat _f _m _rappend _m _rrevcdr _rsplit _rempty
_rflatten map _rconcat _f _m _rappend _o _rrevcdr _rsplit _rempty
_rflatten map _rconcat _f _m map _rconcat _f _m _rsplit _rempty
###re2_train_779_if_the_word_starts_with_any_letter_any_letter_replace_that_with_r_c
if the word starts with any letter any letter replace that with r c
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _c _r
_rflatten #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _rsplit _rempty _c _r
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _r cdr _rsplit _rdot _rflatten #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _c _r
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _rsplit _rdot _rflatten cons _r cdr cdr _c _r
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _rsplit _rdot _rflatten cons _r cdr _c _r
###re2_train_780_if_there_is_s_replace_that_with_m_s
if there is s replace that with m s
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _s _m _s
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _s _m _s
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _s _m _s
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _s _rconcat _m _s
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _s _m _s
###re2_train_784_if_the_word_starts_with_consonant_replace_that_with_f_n
if the word starts with consonant replace that with f n
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _e #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _i #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _n _f
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _i #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _e #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _n _f
#(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _n cdr _rsplit _rempty #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _e #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _n _f
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _e #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _e #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _i #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _n _f
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _e #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _i #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _e #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _n _f
###re2_train_786_if_the_word_starts_with_any_letter_any_letter_replace_that_with_l
if the word starts with any letter any letter replace that with l
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _l cdr cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _l _rempty
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _rempty _l
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cdr #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _l _e
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cdr #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _l _i
###re2_train_790_if_the_word_starts_with_consonant_e_replace_that_with_s
if the word starts with consonant e replace that with s
#(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _e cdr _rsplit _rempty #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _rempty _s
#(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _e cdr _rsplit _rempty #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _s _rempty
#(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _e cdr _rsplit _rempty _rflatten #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _rsplit _rempty _rempty _s
#(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _e cdr _rsplit _rempty _rflatten #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _rsplit _rempty _s _rempty
#(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _e cdr _rsplit _rempty #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _rsplit _rempty _s _rempty
###re2_train_791_if_there_is_any_letter_replace_that_with_h_g
if there is any letter replace that with h g
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _g _h
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _g _h
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _g _h
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _rdot _h _g
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) map _rconcat _h _g
###re2_train_796_if_the_word_ends_with_any_letter_any_letter_replace_that_with_j_a
if the word ends with any letter any letter replace that with j a
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _a _rappend _j _rrevcdr _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _rconcat _j _a _rrevcdr _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _a _rrevcdr #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _a _rappend _j _rrevcdr _rrevcdr
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _a _j #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _j _rrevcdr _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _a _rappend _j _rrevcdr _rrevcdr #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _j _rrevcdr
###re2_train_797_if_the_word_ends_with_any_letter_replace_that_with_e_y
if the word ends with any letter replace that with e y
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _y _e
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _y _e #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _y _e
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _y _e #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _y _e
###re2_train_811_if_the_word_ends_with_consonant_replace_that_with_j
if the word ends with consonant replace that with j
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _a _e _j _rrevcdr
###re2_train_812_if_there_is_any_letter_replace_that_with_u_y
if there is any letter replace that with u y
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _y _u
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _y _u
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _y _u
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _rdot _u _y
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) map _rconcat _u _y
###re2_train_817_if_there_is_o_replace_that_with_b
if there is o replace that with b
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) if _rmatch _o _b
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _o _b
###re2_train_821_if_the_word_ends_with_consonant_replace_that_with_m_p
if the word ends with consonant replace that with m p
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _p _m
_rflatten _rappend _p _rappend _m _rrevcdr _rsplit _rempty
_rflatten _rappend _p _rrevcdr _rappend _p _rappend _m _rrevcdr _rsplit _rempty
_rflatten _rappend _p _rappend _m _rrevcdr _rappend _m _rrevcdr _rsplit _rempty
_rflatten _rappend _p _rrevcdr _rappend _m _rappend _m _rrevcdr _rsplit _rempty
###re2_train_823_if_the_word_starts_with_consonant_replace_that_with_b_i
if the word starts with consonant replace that with b i
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _a #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _i _b
###re2_train_826_if_there_is_s_replace_that_with_w
if there is s replace that with w
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _s _w
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _s _w
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _s #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _w
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _s _w
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _s #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _w
###re2_train_828_if_there_is_p_add_m_after_that
if there is p add m after that
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) if _rmatch _p _rconcat _m
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _p _p _m
###re2_train_831_if_the_word_ends_with_any_letter_replace_that_with_v_j
if the word ends with any letter replace that with v j
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _j _v
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _j _v #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _j _v
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _j _v #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _j _v
###re2_train_834_if_the_word_starts_with_consonant_replace_that_with_l_a
if the word starts with consonant replace that with l a
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _u #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _a _l
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _n cdr #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _a _l
#(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _n cdr _rsplit _rempty #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _a _l
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _n cdr _rsplit _rempty #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _a _l
#(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _n _rrevcdr cdr _rsplit _rempty #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _a _l
###re2_train_837_if_there_is_m_add_a_before_that
if there is m add a before that
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _m _a _m
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _m _a _m
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _m #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rconcat _a _m
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _m _a _m
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _m #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _a _m
###re2_train_845_if_the_word_ends_with_consonant_replace_that_with_m_x
if the word ends with consonant replace that with m x
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _x _m
_rflatten _rappend _x _rappend _m _rrevcdr _rsplit _rempty
_rflatten _rappend _rempty _rappend _x _rappend _m _rrevcdr _rsplit _rempty
_rflatten _rappend _x _rappend _m _rappend _rempty _rrevcdr _rsplit _rempty
_rflatten _rappend _x _rappend _rempty _rappend _m _rrevcdr _rsplit _rempty
###re2_train_848_if_the_word_starts_with_consonant_replace_that_with_h
if the word starts with consonant replace that with h
#(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _n cdr _rsplit _rempty #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _rempty _h
###re2_train_851_if_there_is_any_letter_replace_that_with_u_t
if there is any letter replace that with u t
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _t _u
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _t _u
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _t _u
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _rdot _u _t
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _u _t
###re2_train_857_if_the_word_ends_with_any_letter_replace_that_with_y_w
if the word ends with any letter replace that with y w
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _w _y
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _w _y #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _w _y
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _w _y #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _w _y
###re2_train_859_if_there_is_i_replace_that_with_e_q
if there is i replace that with e q
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _i _e _q
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _i _e _q
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _i _e _q
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _i _rconcat _e _q
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _i _e _q
###re2_train_860_if_there_is_any_letter_replace_that_with_x_a
if there is any letter replace that with x a
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _a _x
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _a _x
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _a _x
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _rdot _x _a
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) map _rconcat _x _a
###re2_train_862_if_the_word_starts_with_any_letter_add_i_after_that
if the word starts with any letter add i after that
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _i car
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _i car _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _i car
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _i car #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _i car _rrevcdr _rrevcdr
###re2_train_863_if_there_is_e_add_t_after_that
if there is e add t after that
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _e _e _t
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _e _e _t
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _e #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rconcat _e _t
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _e #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _e _t
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _e _rflatten _rsplit _m _rconcat _e _t
###re2_train_864_if_there_is_r_replace_that_with_l
if there is r replace that with l
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _r _l
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _r _l
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _r #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _l
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _r _l
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _r #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _l
###re2_train_865_if_the_word_starts_with_any_letter_add_c_before_that
if the word starts with any letter add c before that
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _c
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _c #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _c
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _c #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _c
###re2_train_866_if_there_is_p_replace_that_with_y
if there is p replace that with y
_rflatten map if _rmatch _p _y _rsplit _p
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _p _y
_rflatten map if _rmatch _p _y _rsplit _rempty
_rflatten map if _rmatch _p _y _rsplit _rnot _f
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) map if _rmatch _p _y map if _rmatch _p _y
###re2_train_871_if_the_word_starts_with_consonant_replace_that_with_c_w
if the word starts with consonant replace that with c w
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch car _a #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _w _c
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _a #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _w _c
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _c cdr #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _w _c
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _a _rsplit _rempty #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _w _c
#(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _c cdr _rsplit _rempty #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _w _c
###re2_train_874_if_there_is_any_letter_add_e_before_that
if there is any letter add e before that
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _e
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _e
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rconcat _e
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) map _rconcat _e
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _e
###re2_train_875_if_the_word_ends_with_any_letter_replace_that_with_w_w
if the word ends with any letter replace that with w w
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _w _w
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _w _w #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _w _w
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _w _w #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _w _w
###re2_train_877_if_the_word_starts_with_any_letter_replace_that_with_n_u
if the word starts with any letter replace that with n u
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _u _n
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _rconcat _n _u cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _u _n #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _n #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _u cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _n cons _u #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cdr
###re2_train_882_if_there_is_i_add_k_after_that
if there is i add k after that
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _i _i _k
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _i _i _k
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _i #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rconcat _i _k
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _i #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _i _k
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _i _rflatten _rsplit _i _rconcat _i _k
###re2_train_884_if_the_word_starts_with_any_letter_any_letter_replace_that_with_m_h
if the word starts with any letter any letter replace that with m h
_rflatten #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _rsplit _rempty _h _m
_rflatten cons _rconcat _m _h cdr cdr _rsplit _rempty
###re2_train_885_if_the_word_starts_with_any_letter_any_letter_replace_that_with_e_u
if the word starts with any letter any letter replace that with e u
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _u _e
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _u _e #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _u _e
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _u _e #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _u _e #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
###re2_train_888_if_the_word_ends_with_any_letter_replace_that_with_i_o
if the word ends with any letter replace that with i o
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _o _i
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _o _i #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _o _i
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _o _i
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _o _i #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
###re2_train_889_if_there_is_r_replace_that_with_x
if there is r replace that with x
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _r _x
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _r _x
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _r #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _x
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _r _rempty _x
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _r _x _rempty
###re2_train_890_if_there_is_n_replace_that_with_b_q
if there is n replace that with b q
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _n _b _q
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _n #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rconcat _b _q
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _n _b _q
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _n #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _b _q
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _n if _rmatch _p _e _rconcat _b _q
###re2_train_897_if_there_is_u_replace_that_with_i
if there is u replace that with i
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _u _i
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _u _i
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _u #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _i
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _u _i _rempty
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _u _rempty _i
###re2_train_898_if_there_is_o_replace_that_with_i_o
if there is o replace that with i o
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _o _i _o
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _o #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rconcat _i _o
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _o _i _o
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _o #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _i _o
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _o _rflatten _rsplit _rempty _rconcat _i _o
###re2_train_900_if_the_word_ends_with_any_letter_replace_that_with_c_y
if the word ends with any letter replace that with c y
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _y _c
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _y _c
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _y _c #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _y _c #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _y _c
###re2_train_903_if_the_word_starts_with_any_letter_add_e_after_that
if the word starts with any letter add e after that
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _e car
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _rsplit _rempty _e car
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _e car _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _rsplit _rempty _e car _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _e car _rrevcdr _rsplit _rempty
###re2_train_907_if_there_is_i_replace_that_with_v_h
if there is i replace that with v h
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _i _v _h
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _i _v _h
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _i _v _h
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _i _rconcat _v _h
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _i _v _h
###re2_train_908_if_the_word_starts_with_consonant_add_p_before_that
if the word starts with consonant add p before that
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _p
_rflatten cons _p _rsplit _rempty
_rflatten cons _p _rsplit _a
_rflatten cons _p _rsplit _p
_rflatten cons _p _rsplit _b
###re2_train_920_if_there_is_g_add_a_after_that
if there is g add a after that
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _g _g _a
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _g #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rconcat _g _a
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _g _g _a
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _g #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _rconcat _g _a
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _g _rflatten _rsplit _i _rconcat _g _a
###re2_train_922_if_the_word_ends_with_any_letter_replace_that_with_c_d
if the word ends with any letter replace that with c d
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _d _c
_rflatten _rappend _d _rappend _c _rrevcdr _rsplit _rempty
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _rconcat _c _d _rrevcdr
_rflatten _rappend _rconcat _c _d _rrevcdr _rsplit _rempty
_rflatten _rappend _d _rappend _c _rrevcdr _rsplit _rempty _rflatten _rappend _c _rrevcdr _rsplit _rempty
###re2_train_924_if_there_is_any_letter_replace_that_with_d_x
if there is any letter replace that with d x
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _rdot _d _x
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _x _d
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _rdot _d _x
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rdot _d _x
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _x _d
###re2_train_925_if_the_word_starts_with_any_letter_any_letter_replace_that_with_m_w
if the word starts with any letter any letter replace that with m w
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _w _m
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _w _m #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _w _m
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _w _m #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _w _m #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
###re2_train_928_if_the_word_starts_with_any_letter_add_w_before_that
if the word starts with any letter add w before that
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _w
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _w #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _w
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _w #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _w
###re2_train_931_if_the_word_ends_with_s_add_l_after_that
if the word ends with s add l after that
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch _rtail _s _rappend _l
###re2_train_933_if_the_word_ends_with_consonant_replace_that_with_y_k
if the word ends with consonant replace that with y k
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _k _y
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _k _y #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _k _y
#(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _rconcat _y _k
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _k _y
###re2_train_946_if_there_is_s_add_m_after_that
if there is s add m after that
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _s _s _m
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _s _s _m
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _s _s _m
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _s _rconcat _s _m
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _s _s _m
###re2_train_947_if_the_word_ends_with_consonant_any_letter_replace_that_with_c
if the word ends with consonant any letter replace that with c
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) if _rmatch _rtail _rrevcdr _e _rappend _c _rrevcdr _rrevcdr
###re2_train_950_if_the_word_starts_with_consonant_replace_that_with_m_j
if the word starts with consonant replace that with m j
#(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _m cdr _rsplit _rempty #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _e #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _j _m
###re2_train_954_if_the_word_ends_with_any_letter_add_e_after_that
if the word ends with any letter add e after that
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _e
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _e
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _e #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
_rflatten _rappend _e _rsplit _p
_rflatten _rappend _e _rsplit _a
###re2_train_956_if_the_word_starts_with_any_letter_replace_that_with_f_t
if the word starts with any letter replace that with f t
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _t _f
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _t _f
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _t _f #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _t _f #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _t _f
###re2_train_959_if_the_word_ends_with_any_letter_replace_that_with_f_i
if the word ends with any letter replace that with f i
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _i _f
_rflatten _rappend _i _rappend _f _rrevcdr _rsplit _rempty
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _rconcat _f _i _rrevcdr
_rflatten _rappend _rconcat _f _i _rrevcdr _rsplit _rempty
_rflatten _rappend _i _rappend _f _rrevcdr _rappend _i _rrevcdr _rsplit _rempty
###re2_train_960_if_the_word_starts_with_any_letter_replace_that_with_v_k
if the word starts with any letter replace that with v k
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _k _v
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _k _v
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _k _v #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _k _v #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _k _v
###re2_train_968_if_the_word_starts_with_any_letter_double_that
if the word starts with any letter double that
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons car
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons car _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons car
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons car #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) car map cons
###re2_train_969_if_there_is_any_letter_replace_that_with_y_o
if there is any letter replace that with y o
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _o _y
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _rdot _y _o
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _o _y
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$2^(lambda^(_rconcat^$1^$2)))))) _o _y
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _o _rconcat _y
###re2_train_974_if_there_is_g_replace_that_with_b
if there is g replace that with b
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _g _b
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _g _b
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _g #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _b
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _g _b
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _g #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _b
###re2_train_977_if_there_is_c_replace_that_with_b
if there is c replace that with b
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _c _b
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _c _b
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _c #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _b
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _c _rflatten _rsplit _rdot _b
_rflatten _rsplit _rdot #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _c _b
###re2_train_979_if_there_is_o_replace_that_with_k
if there is o replace that with k
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _o _k
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _o _k
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _o #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _k
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _o _k
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _o #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _k
###re2_train_985_if_the_word_starts_with_consonant_any_letter_replace_that_with_r
if the word starts with consonant any letter replace that with r
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _i #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _rempty _r
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _i #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _rsplit _rempty _rempty _r
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _i _rsplit _rempty #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _rempty _r
if _rmatch _rtail _rsplit _r _e #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _rempty _r
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _i #(lambda^(lambda^(if^(_rmatch^(car^(_rrevcdr^$0))^$1)))) _i #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _rempty _r #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _rempty _r
###re2_train_987_if_the_word_ends_with_any_letter_replace_that_with_t
if the word ends with any letter replace that with t
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _t _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _t _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _t #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _t _rrevcdr #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _t _rrevcdr #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
###re2_train_988_if_the_word_ends_with_any_letter_replace_that_with_x_q
if the word ends with any letter replace that with x q
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _q _x
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _q _x #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _q _x
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _q _x #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) #(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _q _x
###re2_train_989_if_there_is_n_replace_that_with_f
if there is n replace that with f
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _n _f
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _n _f
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _n #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _f
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _n _rempty _f
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _n _f _rempty
###re2_train_992_if_the_word_starts_with_any_letter_replace_that_with_b_f
if the word starts with any letter replace that with b f
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _f _b
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _rconcat _b _f cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _b #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _f cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cons _b cons _f #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _f _b #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
###re2_train_993_if_there_is_c_add_n_before_that
if there is c add n before that
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _c _n _c
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) _c _n _c
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _c _n _c
#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0)))))) _c _rconcat _n _c
#(lambda^(lambda^(lambda^(lambda^(#(lambda^(lambda^(lambda^(#(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))^$1^(lambda^(if^(_rmatch^$3^$0)^$1^$0))))))^$2^$3^(_rconcat^$1^$0)))))) #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1))))) _c _n _c
###re2_train_996_if_the_word_ends_with_consonant_replace_that_with_a
if the word ends with consonant replace that with a
#(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _a
#(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _a #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^(if^(_rmatch^(_rtail^$0)^_e)^_e^$1)^(_rrevcdr^$0))))) _a
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _a _rempty
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _rempty _a
###re2_train_997_if_the_word_starts_with_any_letter_add_n_after_that
if the word starts with any letter add n after that
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _n car
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _n car _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _n car
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _n car #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _n car _rrevcdr _rrevcdr
###re2_train_998_if_the_word_starts_with_any_letter_any_letter_replace_that_with_t_n
if the word starts with any letter any letter replace that with t n
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _n _t
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _n _t
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) _n _t #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) cdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _n _t #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) #(lambda^(lambda^(lambda^(cons^$0^(cons^$1^(cdr^$2)))))) cdr _n _t #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
###re2_train_999_if_the_word_ends_with_any_letter_replace_that_with_i_c
if the word ends with any letter replace that with i c
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _c _i
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _rconcat _i _c _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _rconcat _i _c #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rrevcdr
#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0))))) _rappend _rconcat _i _c _rrevcdr #(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))
#(lambda^(lambda^(#(lambda^(lambda^(_rflatten^($1^(_rsplit^_rdot^$0)))))^(lambda^(_rappend^$2^(_rappend^$1^(_rrevcdr^$0))))))) _c _i #(lambda^(lambda^(_rflatten^(map^$0^(_rsplit^_rdot^$1)))))
